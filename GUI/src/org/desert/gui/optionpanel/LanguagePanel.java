/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.desert.gui.optionpanel;

import java.awt.Component;
import java.awt.Frame;
import java.util.Locale;
import javax.swing.ComboBoxModel;
import javax.swing.JFrame;
import javax.swing.event.ListDataListener;
import org.openide.windows.WindowManager;

final class LanguagePanel extends javax.swing.JPanel {

    private final LanguageOptionsPanelController controller;

    LanguagePanel(LanguageOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        Locale[] locals = new Locale[2];
        locals[0] = Locale.ENGLISH;
        locals[1] = Locale.GERMAN;
        cmbLng.setModel(new LanguageModel(locals));
        //cmbLng.get
        // TODO Sprache aus Preferences lesen
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLng = new javax.swing.JLabel();
        cmbLng = new javax.swing.JComboBox();

        org.openide.awt.Mnemonics.setLocalizedText(lblLng, org.openide.util.NbBundle.getMessage(LanguagePanel.class, "LABEL_LANGUAGE")+":"); // NOI18N

        cmbLng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLngActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLng)
                .addGap(18, 18, 18)
                .addComponent(cmbLng, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLng)
                    .addComponent(cmbLng, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbLngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLngActionPerformed
        controller.changed();
    }//GEN-LAST:event_cmbLngActionPerformed

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(LanguagePanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(LanguagePanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(LanguagePanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(LanguagePanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());

        Locale selLng = (Locale) cmbLng.getSelectedItem();
        Locale.setDefault(selLng);

        Frame main = WindowManager.getDefault().getMainWindow();
        Component[] cs = ((JFrame) main).getJMenuBar().getComponents();
        for (Component c : cs) {
            Runnable menu = (Runnable) c;
            menu.run();
        }
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbLng;
    private javax.swing.JLabel lblLng;
    // End of variables declaration//GEN-END:variables

    class LanguageModel implements ComboBoxModel {

        Object selected = null;
        Locale[] locals;

        public LanguageModel(Locale[] locals) {
            this.locals = locals;
            selected = locals[0].getDisplayLanguage();
        }

        @Override
        public void setSelectedItem(Object anItem) {
            selected = anItem;
        }

        @Override
        public Object getSelectedItem() {
            return selected;
        }

        @Override
        public int getSize() {
            return 2;
        }

        @Override
        public Object getElementAt(int index) {
            return (Object) locals[index].getDisplayLanguage();
        }

        @Override
        public void addListDataListener(ListDataListener l) {
        }

        @Override
        public void removeListDataListener(ListDataListener l) {
        }

    }

}
